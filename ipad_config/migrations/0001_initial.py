# Generated by Django 2.2.7 on 2020-01-24 07:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ipad_config.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AirlineDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('airlineName', models.CharField(db_index=True, max_length=255)),
                ('airlineCode', models.CharField(db_index=True, max_length=255)),
                ('imageName', models.CharField(max_length=255)),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'airlinedetails',
            },
        ),
        migrations.CreateModel(
            name='AirportDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('airport_name', models.CharField(db_index=True, max_length=255)),
                ('airport_code', models.CharField(db_index=True, max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('city_code', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'airportdetails',
            },
        ),
        migrations.CreateModel(
            name='CurrencyTypes',
            fields=[
                ('currency_name', models.CharField(db_index=True, max_length=255, primary_key=True, serialize=False)),
                ('currency_code', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('flag_image_name', models.CharField(blank=True, max_length=255, null=True)),
                ('locale_identifilre', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'currency_types',
            },
        ),
        migrations.CreateModel(
            name='DefaultImportSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting_assets', models.FileField(upload_to='default_imports')),
                ('main_features', models.FileField(upload_to='default_imports')),
                ('feature_settings', models.FileField(upload_to='default_imports')),
                ('common_settings', models.FileField(upload_to='default_imports')),
                ('home_feature_settings', models.FileField(upload_to='default_imports')),
                ('theme_sqlite', models.FileField(upload_to='default_imports')),
                ('java_config_json', models.FileField(upload_to='default_imports')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DVLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.TextField(blank=True, null=True)),
                ('field', models.TextField(blank=True, null=True)),
                ('lang_code', models.CharField(blank=True, max_length=255, null=True)),
                ('module_name', models.CharField(blank=True, default='', max_length=255, null=True)),
            ],
            options={
                'db_table': 'dv_language',
            },
        ),
        migrations.CreateModel(
            name='DVLanguageCode',
            fields=[
                ('lang_id', models.IntegerField(db_column='lang_id', primary_key=True, serialize=False)),
                ('lang_code', models.CharField(blank=True, max_length=255, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField(default=1)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'dv_language_code',
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('hotel_code', models.CharField(max_length=255)),
                ('hotel_id', models.IntegerField()),
                ('hotel_key', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='IpadBaseModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LanguageSqliteSequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('seq', models.IntegerField(blank=True, default=0)),
            ],
            options={
                'db_table': 'sqlite_sequence',
            },
        ),
        migrations.CreateModel(
            name='LocationCategory',
            fields=[
                ('cat_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'location_category',
            },
        ),
        migrations.CreateModel(
            name='LocationSearch',
            fields=[
                ('places', models.TextField(primary_key=True, serialize=False)),
                ('displayname', models.TextField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('cat_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'location_search',
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='default', max_length=100)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_types', to='ipad_config.Hotel')),
            ],
        ),
        migrations.CreateModel(
            name='SettingsMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=100, unique=True)),
                ('model_name', models.CharField(max_length=100)),
                ('fields', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeZone',
            fields=[
                ('city_id', models.IntegerField(db_index=True, primary_key=True, serialize=False)),
                ('city_name', models.CharField(blank=True, max_length=255, null=True)),
                ('country_name', models.CharField(blank=True, max_length=255, null=True)),
                ('timezone_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'time_zone',
            },
        ),
        migrations.CreateModel(
            name='Weathericon',
            fields=[
                ('weathercode', models.IntegerField(db_index=True, primary_key=True, serialize=False)),
                ('unicode', models.CharField(blank=True, max_length=255, null=True)),
                ('iconvault_unicode', models.CharField(blank=True, max_length=255, null=True)),
                ('background_image', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'weathericon',
            },
        ),
        migrations.CreateModel(
            name='UserHotel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='ipad_config.Hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_hotels', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UploadQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(blank=True, default='', max_length=255)),
                ('upload_type', models.CharField(choices=[('THEME', 'THEME'), ('ASSET_JSON', 'ASSET_JSON'), ('LANGUAGE', 'LANGUAGE'), ('MAIN_FEATURES', 'MAIN_FEATURES'), ('COMMON_SETTINGS', 'COMMON_SETTINGS'), ('FEATURE_SETTINGS', 'FEATURE_SETTINGS'), ('HOME_FEATURE', 'HOME_FEATURE')], max_length=100)),
                ('state', models.CharField(choices=[('PENDING', 'PENDING'), ('RUNNING', 'RUNNING'), ('SUCCESS', 'SUCCESS'), ('FAILED', 'FAILED')], max_length=50)),
                ('theme_id', models.IntegerField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('room_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upload_queue', to='ipad_config.RoomType')),
            ],
            options={
                'ordering': ('created_on',),
            },
        ),
        migrations.CreateModel(
            name='StaticContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('FILE', 'FILE'), ('ZIP', 'ZIP')], max_length=30)),
                ('content', models.FileField(help_text='Please re-upload file if roomtype selected or changed ', upload_to=ipad_config.models.get_static_content_upload_path)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='static_content', to='ipad_config.Hotel')),
                ('room_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='static_content', to='ipad_config.RoomType')),
            ],
        ),
        migrations.CreateModel(
            name='SettingsImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetType', models.CharField(default='image', max_length=255)),
                ('_assetTimestamp', models.DateTimeField(auto_now_add=True)),
                ('assetName', models.FileField(blank=True, null=True, upload_to=ipad_config.models.get_upload_path)),
                ('image', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='setting_images', to='ipad_config.IpadBaseModel')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings_images', to='ipad_config.Theme')),
            ],
        ),
        migrations.AddField(
            model_name='roomtype',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_type', to='ipad_config.Theme'),
        ),
        migrations.CreateModel(
            name='MainFeatures',
            fields=[
                ('main_feature_id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('enabled', models.IntegerField(choices=[(0, '0'), (1, '1')], default=0)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('feature', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_feature', models.CharField(blank=True, max_length=255, null=True)),
                ('room_id', models.IntegerField(blank=True, null=True)),
                ('controller_id', models.IntegerField(blank=True, null=True)),
                ('contains_subcategory', models.IntegerField(choices=[(0, '0'), (1, '1')], default=0)),
                ('app_version', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_id', models.ForeignKey(blank=True, db_constraint=False, default=0, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='children', to='ipad_config.MainFeatures')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_features', to='ipad_config.RoomType')),
            ],
            options={
                'db_table': 'main_features',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='JavaEnvironmentVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(choices=[('DAS', 'DAS'), ('DAS_SSL', 'DAS_SSL'), ('DVS', 'DVS'), ('DVS_SSL', 'DVS_SSL'), ('HIS', 'HIS'), ('HIS_SSL', 'HIS_SSL'), ('MDS', 'MDS'), ('MDS_SSL', 'MDS_SSL'), ('VOD', 'VOD'), ('VOD_SSL', 'VOD_SSL'), ('BUTLER', 'BUTLER'), ('BUTLER_SSL', 'BUTLER_SSL'), ('DIGIVALET_API_HOST', 'DIGIVALET_API_HOST'), ('ONEAUTH_HOST', 'ONEAUTH_HOST'), ('DIGIMAILER_URL', 'DIGIMAILER_URL'), ('DVSERVICES_API_HOST', 'DVSERVICES_API_HOST'), ('BUTLER_DAS_SSL', 'BUTLER_DAS_SSL'), ('HOTEL_CODE', 'HOTEL_CODE'), ('HOTEL_ID', 'HOTEL_ID'), ('SA_VENDOR', 'SA_VENDOR'), ('SA_VENDOR_URL', 'SA_VENDOR_URL'), ('SA_VENDOR_PASS', 'SA_VENDOR_PASS'), ('SA_VENDOR_USER', 'SA_VENDOR_USER'), ('SA_VENDOR_PROPERTY_CODE', 'SA_VENDOR_PROPERTY_CODE'), ('SA_VENDOR_AUTH_URL', 'SA_VENDOR_AUTH_URL'), ('SA_VENDOR_AUTH_ID', 'SA_VENDOR_AUTH_ID'), ('SA_VENDOR_AUTH_SECRET', 'SA_VENDOR_AUTH_SECRET'), ('REST_VENDOR', 'REST_VENDOR'), ('REST_VENDOR_URL', 'REST_VENDOR_URL'), ('REST_VENDOR_PASS', 'REST_VENDOR_PASS'), ('REST_VENDOR_USER', 'REST_VENDOR_USER'), ('SPA_VENDOR', 'SPA_VENDOR'), ('SPA_VENDOR_AUTH_ID', 'SPA_VENDOR_AUTH_ID'), ('SPA_VENDOR_AUTH_SECRET', 'SPA_VENDOR_AUTH_SECRET'), ('SPA_VENDOR_AUTH_URL', 'SPA_VENDOR_AUTH_URL'), ('SPA_VENDOR_PASS', 'SPA_VENDOR_PASS'), ('SPA_VENDOR_PROPERTY_CODE', 'SPA_VENDOR_PROPERTY_CODE'), ('SPA_VENDOR_URL', 'SPA_VENDOR_URL'), ('SPA_VENDOR_USER', 'SPA_VENDOR_USER'), ('MSG_SERV_VENDOR', 'MSG_SERV_VENDOR'), ('PRINT_MAILER_SSL', 'PRINT_MAILER_SSL'), ('BUTLER_PRINT_MAILER_SSL', 'BUTLER_PRINT_MAILER_SSL'), ('MESSAGE_SERV_SSL', 'MESSAGE_SERV_SSL'), ('MESSAGE_URL', 'MESSAGE_URL'), ('MESSAGE_USER', 'MESSAGE_USER'), ('MESSAGE_PASS', 'MESSAGE_PASS'), ('MESSAGE_FROM', 'MESSAGE_FROM'), ('MESSAGE_TO', 'MESSAGE_TO'), ('DV_IRD_PRINTER', 'DV_IRD_PRINTER'), ('DV_REST_PRINTER', 'DV_REST_PRINTER'), ('DV_SPA_PRINTER', 'DV_SPA_PRINTER'), ('DV_SA_PRINTER', 'DV_SA_PRINTER'), ('POS_RETAIL_VENDOR', 'POS_RETAIL_VENDOR'), ('POS_RETAIL_VENDOR_AUTH_ID', 'POS_RETAIL_VENDOR_AUTH_ID'), ('POS_RETAIL_VENDOR_AUTH_SECRET', 'POS_RETAIL_VENDOR_AUTH_SECRET'), ('POS_RETAIL_VENDOR_AUTH_URL', 'POS_RETAIL_VENDOR_AUTH_URL'), ('POS_RETAIL_VENDOR_PASS', 'POS_RETAIL_VENDOR_PASS'), ('POS_RETAIL_VENDOR_PROPERTY_CODE', 'POS_RETAIL_VENDOR_PROPERTY_CODE'), ('POS_RETAIL_VENDOR_URL', 'POS_RETAIL_VENDOR_URL'), ('POS_RETAIL_VENDOR_USER', 'POS_RETAIL_VENDOR_USER'), ('POS_IRD_VENDOR', 'POS_IRD_VENDOR'), ('POS_IRD_APP_ID', 'POS_IRD_APP_ID'), ('POS_IRD_URL', 'POS_IRD_URL'), ('POSI_RVC_ID', 'POSI_RVC_ID'), ('DVC_DATA_PORT', 'DVC_DATA_PORT'), ('BUTLER_CALL_SSL', 'BUTLER_CALL_SSL'), ('ALERT_MAIL_ID', 'ALERT_MAIL_ID'), ('PMS_SERVER', 'PMS_SERVER'), ('PMS_PORT', 'PMS_PORT'), ('PMS_VENDOR', 'PMS_VENDOR'), ('GATEWAY_SERV_SSL', 'GATEWAY_SERV_SSL'), ('RMS_VENDOR', 'RMS_VENDOR'), ('GW_DVC_DATA_PORT', 'GW_DVC_DATA_PORT'), ('PUSH_NOTIFY_URL', 'PUSH_NOTIFY_URL'), ('INTERNET_SERV_VENDOR', 'INTERNET_SERV_VENDOR'), ('DVPOS_IRD_URL', 'DVPOS_IRD_URL'), ('LOCK_VENDOR_URL', 'LOCK_VENDOR_URL'), ('LOCK_VENDOR', 'LOCK_VENDOR'), ('LOCK_VENDOR_USER', 'LOCK_VENDOR_USER'), ('LOCK_VENDOR_PASS', 'LOCK_VENDOR_PASS'), ('ZB_DVC_DATA_PORT', 'ZB_DVC_DATA_PORT'), ('MONITOR_LOG_TIME', 'MONITOR_LOG_TIME'), ('SMS_VENDOR', 'SMS_VENDOR'), ('SMS_TO', 'SMS_TO'), ('SMS_FROM', 'SMS_FROM'), ('SMS_USER', 'SMS_USER'), ('SMS_PASSWORD', 'SMS_PASSWORD'), ('SMS_URL', 'SMS_URL'), ('EPG_ACCESS_TOKEN', 'EPG_ACCESS_TOKEN')], max_length=255, unique=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ipad_config.Hotel')),
            ],
        ),
        migrations.CreateModel(
            name='JavaConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(max_length=50)),
                ('config_key', models.CharField(max_length=100)),
                ('config_val', models.TextField()),
                ('val_type', models.CharField(default='text', max_length=50)),
                ('description', models.TextField()),
                ('is_deletable', models.BooleanField(default=False)),
                ('hotel_id', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('delete_msg', models.CharField(blank=True, default='', max_length=255)),
                ('is_deleted', models.BooleanField(default=True)),
                ('created_by', models.IntegerField(blank=True, default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.IntegerField(blank=True, default=1)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('is_synced', models.BooleanField(default=False)),
                ('related_hotel', models.ForeignKey(db_column='related_hotel', on_delete=django.db.models.deletion.CASCADE, related_name='java_configs', to='ipad_config.Hotel')),
            ],
        ),
        migrations.CreateModel(
            name='HotelBookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='ipad_config.Hotel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_hotels', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HomeFeatures',
            fields=[
                ('home_feature_id', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, default=0)),
                ('enabled', models.IntegerField(choices=[(0, '0'), (1, '1')], default=0)),
                ('name', models.CharField(max_length=255)),
                ('image_name', models.CharField(max_length=255)),
                ('selected_image_name', models.CharField(max_length=255)),
                ('feature', models.CharField(max_length=255)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('command', models.CharField(blank=True, max_length=255, null=True)),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_features', to='ipad_config.RoomType')),
            ],
            options={
                'db_table': 'home_features',
            },
        ),
        migrations.CreateModel(
            name='FontStyleMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('font_style_name', models.CharField(max_length=255)),
                ('apply_on', models.CharField(max_length=255)),
                ('module_name', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='font_style_mappings', to='ipad_config.Theme')),
            ],
            options={
                'db_table': 'font_style_mapping',
            },
        ),
        migrations.CreateModel(
            name='FontStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('font_style_name', models.CharField(max_length=255)),
                ('font_name', models.CharField(max_length=255)),
                ('font_size', models.FloatField(default='16')),
                ('font_color', models.CharField(max_length=255)),
                ('shadow_color', models.CharField(max_length=255)),
                ('shadow_offset', models.CharField(default='{0,0}', max_length=255)),
                ('shadow_radius', models.FloatField(default='0')),
                ('shadow_opacity', models.FloatField(default='0')),
                ('attributes', models.TextField(blank=True, null=True)),
                ('lang_code', models.CharField(default='en', max_length=255)),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='font_styles', to='ipad_config.Theme')),
            ],
            options={
                'db_table': 'font_style',
            },
        ),
        migrations.CreateModel(
            name='FeaturesSetting',
            fields=[
                ('feature_settings_id', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, default=0)),
                ('feature_id', models.IntegerField(blank=True, default=0)),
                ('feature_name', models.CharField(max_length=255)),
                ('parameters', models.TextField(blank=True, null=True)),
                ('main_feature', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='ipad_config.MainFeatures')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_settings', to='ipad_config.RoomType')),
            ],
            options={
                'db_table': 'features_setting',
            },
        ),
        migrations.CreateModel(
            name='ExportQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('PENDING', 'PENDING'), ('RUNNING', 'RUNNING'), ('SUCCESS', 'SUCCESS'), ('FAILED', 'FAILED')], max_length=50)),
                ('message', models.TextField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, default=1)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.IntegerField(blank=True, default=1)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('room_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publish_queue', to='ipad_config.RoomType')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='CommonSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, default='', max_length=255)),
                ('_value', models.TextField(blank=True, db_column='value', default='')),
                ('value_type', models.CharField(blank=True, default='', max_length=50)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='ipad_config.CommonSettings')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='common_settings', to='ipad_config.RoomType')),
            ],
            options={
                'db_table': 'common_settings',
            },
        ),
        migrations.CreateModel(
            name='ColorStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_style_name', models.CharField(max_length=255)),
                ('attributes', models.TextField(blank=True, null=True)),
                ('lang_code', models.CharField(default='en', max_length=255)),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color_styles', to='ipad_config.Theme')),
            ],
            options={
                'db_table': 'color_style',
            },
        ),
        migrations.CreateModel(
            name='AppConfigTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, default='', max_length=255)),
                ('value', models.CharField(blank=True, default='', max_length=255)),
                ('tag_type', models.CharField(default='text', max_length=50)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ipad_config.Hotel')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_tags', to='ipad_config.AppConfigTag')),
            ],
        ),
        migrations.CreateModel(
            name='SplashImages',
            fields=[
                ('ipadbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ipad_config.IpadBaseModel')),
                ('image_key', models.CharField(blank=True, default='', max_length=255)),
                ('position', models.IntegerField(default=1)),
                ('visibility', models.IntegerField(default=1)),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='splash_images', to='ipad_config.RoomType')),
            ],
            options={
                'db_table': 'splash_images',
            }
        ),
        migrations.AlterUniqueTogether(
            name='roomtype',
            unique_together={('name', 'hotel')},
        ),
        migrations.CreateModel(
            name='HotelServices',
            fields=[
                ('ipadbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ipad_config.IpadBaseModel')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('feature_type', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('is_active', models.IntegerField(blank=True, null=True)),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotel_services', to='ipad_config.RoomType')),
            ],
            options={
                'db_table': 'hotel_services',
            }
            
        ),
        migrations.CreateModel(
            name='HotelServiceMapping',
            fields=[
                ('hotel_service_mapping', models.AutoField(primary_key=True, serialize=False)),
                ('type_path', models.CharField(max_length=255)),
                ('feature_type', models.CharField(blank=True, max_length=255, null=True)),
                ('language_code', models.CharField(max_length=255)),
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.CASCADE, related_name='mappings', to='ipad_config.HotelServices', verbose_name='Hotel Service')),
            ],
            options={
                'db_table': 'hotel_service_mapping',
            },
        ),
        migrations.CreateModel(
            name='FQDN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server', models.CharField(choices=[('DAS', 'DAS'), ('DVS', 'DVS'), ('HIS', 'HIS'), ('MDS', 'MDS'), ('VOD', 'VOD'), ('BUTLER', 'BUTLER'), ('ANALYTICS', 'ANALYTICS')], max_length=30)),
                ('fqdn', models.CharField(max_length=255)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ipad_config.Hotel')),
            ],
            options={
                'unique_together': {('hotel', 'server')},
            },
        ),
        migrations.CreateModel(
            name='FeatureImages',
            fields=[
                ('ipadbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ipad_config.IpadBaseModel')),
                ('icon_tag', models.CharField(blank=True, default='', max_length=255)),
                ('main_feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_icons', to='ipad_config.MainFeatures')),
            ],
            bases=('ipad_config.ipadbasemodel',),
        ),
        migrations.CreateModel(
            name='ColorStyleMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_style_name', models.CharField(max_length=255)),
                ('apply_on', models.CharField(max_length=255)),
                ('module_name', models.CharField(blank=True, max_length=255, null=True)),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color_style_mappings', to='ipad_config.Theme')),
            ],
            options={
                'db_table': 'color_style_mapping',
                'unique_together': {('apply_on', 'module_name')},
            },
        ),
    ]
