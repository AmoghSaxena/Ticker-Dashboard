version: '3'

# volumes:
#   production_postgres_data: {}
#   production_postgres_data_backups: {}
#   production_media: {}
#   production_tmp: {}
#   production_staticfiles: {}
services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: ticker_production_django
    links:
#      - postgres
      - mariadb
      - redis
    depends_on:
      - mariadb
#      - postgres
      - redis
    network_mode: bridge
    ports:
      - "38000:8000"
    volumes:
      - ./static:/app/static
      - ./template:/app/template
      - ./media:/app/media
      - ./ticker_django:/tmp
    # env_file:
    #   - ./.envs/.production/.django
    #   - ./.envs/.production/.postgres
    command: /start

  mariadb:
    # build:
      # context: .
      # dockerfile: ./compose/production/mariadb/Dockerfile
    image: mariadb:10.3
    container_name: ticker_production_mariadb
    network_mode: bridge
    volumes:
      - ./ticker_db:/var/lib/mysql
#      - ./db_data:/var/lib/postgresql/data
#      - ./db_data_backup:/backups
    environment:
    environment:
      MYSQL_DATABASE: 'Ticker'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'Ticker'
      # You can use whatever password you like
      MYSQL_PASSWORD: '92b9a3b730'
      # Password for root access
      # MYSQL_ROOT_PASSWORD: ''
#    env_file:
#      - ./.envs/.production/.postgres
    ports:
      - "33306:3306"
    # command: postgres -c 'max_connections=1000'
    command: mysql -e "CREATE DATABASE IF NOT EXISTS Ticker;"
    command: mysql -e "CREATE USER IF NOT EXISTS 'Ticker'@'%' identified by '92b9a3b730';"
    command: mysql -e "CREATE USER IF NOT EXISTS 'rohit'@'192.168.%' identified by 'admin1234';" 
    command: mysql -e "GRANT ALL PRIVILEGES ON *.* TO rohit@'192.168.%';"

  redis:
    image: redis:7.0-alpine
    network_mode: bridge


#  nginx:
#    build:
#      context: .
#      dockerfile: ./compose/production/nginx/Dockerfile
#    network_mode: bridge
#    links:
#      - django
#    depends_on:
#      - django
#    volumes:
#      - production_staticfiles:/staticfiles
#      - production_media:/dv5
#    ports:
#      - "15000:443"


  celeryworker:
    <<: *django
    image: ticker_celeryworker
    container_name: celeryworker
    network_mode: bridge
    depends_on:
      - redis
      - mariadb
    volumes:
      - ./ticker_worker:/tmp
#      - production_media:/app/setup/dv5
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: local_celerybeat
    container_name: celerybeat
    network_mode: bridge
    depends_on:
      - redis
      - mariadb
    ports: []
    command: /start-celerybeat
    network_mode: bridge
    volumes:
      - ./ticker_beat:/tmp


 # flower:
 #   <<: *django
 #   image: local_flower
 #   container_name: flower
 #   network_mode: bridge
 #   ports:
 #     - "5555:5555"
 #   command: /start-flower